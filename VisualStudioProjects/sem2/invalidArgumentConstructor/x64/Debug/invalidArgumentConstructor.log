  Source.cpp
D:\Documents\Personel\dev\cpp\sem2\invalidArgumentConstructor\Source.cpp(10,9): warning C4290: C++ exception specification ignored except to indicate a function is not __declspec(nothrow)
D:\Documents\Personel\dev\cpp\sem2\invalidArgumentConstructor\Source.cpp(30,14): error C2665: 'myClass::myClass': no overloaded function could convert all the argument types
  D:\Documents\Personel\dev\cpp\sem2\invalidArgumentConstructor\Source.cpp(10,2):
  could be 'myClass::myClass(int,std::string) throw(std::exception)'
  	D:\Documents\Personel\dev\cpp\sem2\invalidArgumentConstructor\Source.cpp(30,14):
  	'myClass::myClass(int,std::string) throw(std::exception)': cannot convert argument 2 from 'char' to 'std::string'
  		D:\Documents\Personel\dev\cpp\sem2\invalidArgumentConstructor\Source.cpp(30,18):
  		'std::basic_string<char,std::char_traits<char>,std::allocator<char>>::basic_string': no overloaded function could convert all the argument types
  			C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xstring(2556,5):
  			could be 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>::basic_string(const _Elem *const )'
          with
          [
              _Elem=char
          ]
  				D:\Documents\Personel\dev\cpp\sem2\invalidArgumentConstructor\Source.cpp(30,18):
  				'std::basic_string<char,std::char_traits<char>,std::allocator<char>>::basic_string(const _Elem *const )': cannot convert argument 1 from 'char' to 'const _Elem *const '
          with
          [
              _Elem=char
          ]
  					D:\Documents\Personel\dev\cpp\sem2\invalidArgumentConstructor\Source.cpp(30,18):
  					Conversion from integral type to pointer type requires reinterpret_cast, C-style cast or parenthesized function-style cast
  			C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xstring(3134,5):
  			or       'std::basic_string<char,std::char_traits<char>,std::allocator<char>>::basic_string(std::initializer_list<_Elem>,const _Alloc &)'
          with
          [
              _Elem=char,
              _Alloc=std::allocator<char>
          ]
  				D:\Documents\Personel\dev\cpp\sem2\invalidArgumentConstructor\Source.cpp(30,18):
  				'std::basic_string<char,std::char_traits<char>,std::allocator<char>>::basic_string(std::initializer_list<_Elem>,const _Alloc &)': cannot convert argument 1 from 'char' to 'std::initializer_list<_Elem>'
          with
          [
              _Elem=char,
              _Alloc=std::allocator<char>
          ]
          and
          [
              _Elem=char
          ]
  					D:\Documents\Personel\dev\cpp\sem2\invalidArgumentConstructor\Source.cpp(30,18):
  					Conversion requires a second user-defined-conversion operator or constructor
  			C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xstring(2586,5):
  			or       'std::basic_string<char,std::char_traits<char>,std::allocator<char>>::basic_string(_Iter,_Iter,const _Alloc &)'
          with
          [
              _Alloc=std::allocator<char>
          ]
  			D:\Documents\Personel\dev\cpp\sem2\invalidArgumentConstructor\Source.cpp(30,18):
  			while trying to match the argument list '(char)'
  D:\Documents\Personel\dev\cpp\sem2\invalidArgumentConstructor\Source.cpp(30,14):
  while trying to match the argument list '(int, char)'
  
